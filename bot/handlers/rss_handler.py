from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command

from bot.keyboards.keyboards import get_main_menu
from bot.data.rss_feeds import RSS_FEEDS
from bot.utils.rss_parser import get_first_news
from bot.utils.html_utils import clean_html

router = Router()


@router.message(Command("news"))
async def show_news_categories(message: Message):
    await message.answer(
        "üóÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–æ–≤–æ—Å—Ç–µ–π:",
        reply_markup=get_main_menu()
    )


@router.callback_query(F.data.in_(list(RSS_FEEDS.keys())))
async def send_news_by_category(callback: CallbackQuery):
    category = callback.data
    url = RSS_FEEDS.get(category)

    if not url:
        await callback.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è", show_alert=True)
        return

    news = get_first_news(url)

    if news:
        title, summary, link = news

        text = (
            f"<b>{title}</b>\n\n"
            f"{clean_html(summary)}\n\n"
            f"<a href='{link}'>üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>"
        )

        await callback.message.answer(text, parse_mode="HTML", disable_web_page_preview=False)
    else:
        await callback.message.answer("üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")


def register_rss(dp):
    dp.include_router(router)
