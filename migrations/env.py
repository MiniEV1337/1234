import os
import sys

from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context

# üì¶ –î–æ–±–∞–≤–ª—è–µ–º /app –≤ PYTHONPATH, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–µ–ª–∞—Ç—å from bot.db.base import Base
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# ‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ –±–∞–∑—ã –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –Ω–∞—Å—Ç—Ä–æ–µ–∫
from bot.db.base import Base

# Alembic –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
config = context.config

# üëÄ –î–µ–±–∞–≥: –≤—ã–≤–æ–¥–∏–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∏–∑ alembic.ini
sqlalchemy_url = config.get_main_option("sqlalchemy.url")
print(f"üîç Alembic is using DATABASE_URL = {sqlalchemy_url}")
sqlalchemy_url = config.get_main_option("sqlalchemy.url")
print(f"üîç Alembic is using DATABASE_URL = {sqlalchemy_url}")

if not sqlalchemy_url or "://" not in sqlalchemy_url:
    raise ValueError("‚ùå DATABASE_URL is not defined or malformed. –ü—Ä–æ–≤–µ—Ä—å .env.docker –∏ alembic.ini.")

fileConfig(config.config_file_name)
target_metadata = Base.metadata

def run_migrations_offline():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ —Ä–µ–∂–∏–º–µ offline"""
    context.configure(
        url=sqlalchemy_url,
        target_metadata=target_metadata,
        literal_binds=True,
        compare_type=True,
    )

    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ —Ä–µ–∂–∏–º–µ online"""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            compare_type=True,
        )

        with context.begin_transaction():
            context.run_migrations()

if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
