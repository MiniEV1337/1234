#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

log "üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –±–æ—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "$BOT_TOKEN" ] && [ -z "$TELEGRAM_TOKEN" ]; then
    log "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω BOT_TOKEN –∏–ª–∏ TELEGRAM_TOKEN"
    exit 1
fi

if [ -z "$TOGETHER_API_KEY" ]; then
    log "‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω TOGETHER_API_KEY"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p /app/logs /app/cache/news

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
if [ ! -w "/app/logs" ]; then
    log "‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ /app/logs"
    exit 1
fi

if [ ! -w "/app/cache/news" ]; then
    log "‚ùå –û–®–ò–ë–ö–ê: –ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ /app/cache/news"
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PYTHONPATH
export PYTHONPATH=/app:$PYTHONPATH

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –º–æ–¥—É–ª–∏
log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python -c "
import sys
required_modules = [
    'aiogram', 'aiohttp', 'feedparser', 'asyncio', 
    'logging', 'json', 'datetime', 'pathlib'
]

missing_modules = []
for module in required_modules:
    try:
        __import__(module)
    except ImportError:
        missing_modules.append(module)

if missing_modules:
    print(f'‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–æ–¥—É–ª–∏: {missing_modules}')
    sys.exit(1)
else:
    print('‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
"

if [ $? -ne 0 ]; then
    log "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
log "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
python -c "
import os
import sys

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
bot_token = os.getenv('BOT_TOKEN') or os.getenv('TELEGRAM_TOKEN')
together_key = os.getenv('TOGETHER_API_KEY')
admin_id = os.getenv('ADMIN_ID', '0')

if not bot_token:
    print('‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    sys.exit(1)

if not together_key:
    print('‚ùå TOGETHER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    sys.exit(1)

if not admin_id.isdigit():
    print('‚ö†Ô∏è ADMIN_ID –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')

print('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')
print(f'ü§ñ Bot Token: {bot_token[:10]}...')
print(f'üß† Together API: {together_key[:10]}...')
print(f'üëë Admin ID: {admin_id}')
"

if [ $? -ne 0 ]; then
    log "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è graceful shutdown
cleanup() {
    log "üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    if [ ! -z "$BOT_PID" ]; then
        log "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (PID: $BOT_PID)..."
        kill -TERM "$BOT_PID" 2>/dev/null
        wait "$BOT_PID" 2>/dev/null
    fi
    log "‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGTERM SIGINT

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
log "üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –±–æ—Ç–∞..."

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º PID
python "$@" &
BOT_PID=$!

log "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å PID: $BOT_PID"

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
wait $BOT_PID
EXIT_CODE=$?

if [ $EXIT_CODE -eq 0 ]; then
    log "‚úÖ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log "‚ùå –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: $EXIT_CODE)"
fi

exit $EXIT_CODE
